//plus配色工具
import win.ui;
import win.ui.ctrl.pick;
import fonts.fontAwesome;
/*DSG{{*/
var winform = win.form(text="aardio - plus控件配色工具";right=1126;bottom=754;bgcolor=16777215;border="none";exmode="none";mode="popup")
winform.add(
bk={cls="bk";text="   plus配色工具";left=0;top=0;right=1129;bottom=24;align="left";bgcolor=8026746;color=16777215;dl=1;dr=1;dt=1;z=124};
btnFont={cls="button";text="选择字体";left=253;top=454;right=326;bottom=482;dl=1;dt=1;z=111};
btnOpenColorTable={cls="plus";text='\uF090 导出配色表';left=629;top=727;right=756;bottom=749;bgcolor=-3286072;db=1;dr=1;font=LOGFONT(h=-13;name='FontAwesome');forecolor=-4733773;notify=1;z=127};
btnPreviewCode={cls="plus";text='\uF08E 生成演示源码';left=990;top=727;right=1108;bottom=749;bgcolor=-3286072;db=1;dr=1;font=LOGFONT(h=-13;name='FontAwesome');forecolor=-4733773;notify=1;z=123};
btnUpdateForm={cls="plus";text='\uF08B 导出到窗体设计器选中控件';left=766;top=727;right=985;bottom=749;bgcolor=-3286072;db=1;dr=1;font=LOGFONT(h=-13;name='FontAwesome');forecolor=-4733773;z=122};
button={cls="button";text="选择图标
";left=252;top=484;right=325;bottom=512;dl=1;dt=1;z=74};
cBdActive={cls="plus";left=389;top=132;right=407;bottom=156;bgcolor=15193170;dl=1;dt=1;edge=1;z=83};
cBdActiveChecked={cls="plus";left=389;top=322;right=407;bottom=346;bgcolor=5816524;dl=1;dt=1;edge=1;z=94};
cBdDefault={cls="plus";left=389;top=64;right=407;bottom=88;bgcolor=16775369;dl=1;dt=1;edge=1;z=79};
cBdDefaultChecked={cls="plus";left=389;top=254;right=407;bottom=278;bgcolor=13414549;dl=1;dt=1;edge=1;z=90};
cBdDisabled={cls="plus";left=389;top=194;right=407;bottom=218;bgcolor=12430081;dl=1;dt=1;edge=1;z=87};
cBdDisabledChecked={cls="plus";left=389;top=384;right=407;bottom=408;bgcolor=10581536;dl=1;dt=1;edge=1;z=98};
cBdFocus={cls="plus";left=389;top=162;right=407;bottom=186;bgcolor=14074940;dl=1;dt=1;edge=1;z=85};
cBdFocusChecked={cls="plus";left=389;top=352;right=407;bottom=376;bgcolor=10133792;dl=1;dt=1;edge=1;z=96};
cBdHover={cls="plus";left=389;top=99;right=407;bottom=123;bgcolor=16773785;dl=1;dt=1;edge=1;z=81};
cBdHoverChecked={cls="plus";left=389;top=289;right=407;bottom=313;bgcolor=9807820;dl=1;dt=1;edge=1;z=92};
cBgActive={cls="plus";left=20;top=132;right=38;bottom=156;bgcolor=12378323;color=-1;dl=1;dt=1;edge=1;z=10};
cBgActiveChecked={cls="plus";left=20;top=322;right=38;bottom=346;bgcolor=6141424;dl=1;dt=1;edge=1;z=43};
cBgDefault={cls="plus";left=20;top=64;right=38;bottom=88;bgcolor=11580047;dl=1;dt=1;edge=1;notify=1;z=6};
cBgDefaultChecked={cls="plus";left=20;top=254;right=38;bottom=278;bgcolor=12576767;dl=1;dt=1;edge=1;z=39};
cBgDisabled={cls="plus";left=20;top=194;right=38;bottom=218;bgcolor=14933183;dl=1;dt=1;edge=1;z=14};
cBgDisabledChecked={cls="plus";left=20;top=384;right=38;bottom=408;bgcolor=22159;dl=1;dt=1;edge=1;z=47};
cBgFocus={cls="plus";left=20;top=162;right=38;bottom=186;bgcolor=14935011;dl=1;dt=1;edge=1;z=12};
cBgFocusChecked={cls="plus";left=20;top=352;right=38;bottom=376;bgcolor=2129597;dl=1;dt=1;edge=1;z=45};
cBgHover={cls="plus";left=20;top=99;right=38;bottom=123;bgcolor=11766674;dl=1;dt=1;edge=1;z=8};
cBgHoverChecked={cls="plus";left=20;top=289;right=38;bottom=313;bgcolor=9819132;dl=1;dt=1;edge=1;z=41};
cFgActive={cls="plus";left=145;top=131;right=163;bottom=155;bgcolor=8882679;dl=1;dt=1;edge=1;z=21};
cFgActiveChecked={cls="plus";left=145;top=321;right=163;bottom=345;bgcolor=7907412;dl=1;dt=1;edge=1;z=54};
cFgDefault={cls="plus";left=145;top=63;right=163;bottom=87;bgcolor=14672639;dl=1;dt=1;edge=1;z=17};
cFgDefaultChecked={cls="plus";left=145;top=253;right=163;bottom=277;bgcolor=12971428;dl=1;dt=1;edge=1;z=50};
cFgDisabled={cls="plus";left=145;top=193;right=163;bottom=217;bgcolor=4408202;dl=1;dt=1;edge=1;z=25};
cFgDisabledChecked={cls="plus";left=145;top=383;right=163;bottom=407;bgcolor=4027648;dl=1;dt=1;edge=1;z=58};
cFgFocus={cls="plus";left=145;top=161;right=163;bottom=185;bgcolor=6645199;dl=1;dt=1;edge=1;z=23};
cFgFocusChecked={cls="plus";left=145;top=351;right=163;bottom=375;bgcolor=4688384;dl=1;dt=1;edge=1;z=56};
cFgHover={cls="plus";left=145;top=98;right=163;bottom=122;bgcolor=12040959;dl=1;dt=1;edge=1;z=19};
cFgHoverChecked={cls="plus";left=145;top=288;right=163;bottom=312;bgcolor=9817192;dl=1;dt=1;edge=1;z=52};
cPreviewBackground={cls="plus";left=352;top=470;right=657;bottom=714;db=1;dl=1;dt=1;z=3};
cTxtActive={cls="plus";left=267;top=132;right=285;bottom=156;bgcolor=10263708;dl=1;dt=1;edge=1;z=32};
cTxtActiveChecked={cls="plus";left=267;top=322;right=285;bottom=346;bgcolor=13994083;dl=1;dt=1;edge=1;z=65};
cTxtDefault={cls="plus";left=267;top=64;right=285;bottom=88;bgcolor=0;dl=1;dt=1;edge=1;z=28};
cTxtDefaultChecked={cls="plus";left=267;top=255;right=285;bottom=279;bgcolor=16762792;dl=1;dt=1;edge=1;z=61};
cTxtDisabled={cls="plus";left=267;top=194;right=285;bottom=218;bgcolor=15132390;dl=1;dt=1;edge=1;z=36};
cTxtDisabledChecked={cls="plus";left=267;top=384;right=285;bottom=408;bgcolor=9324544;dl=1;dt=1;edge=1;z=69};
cTxtFocus={cls="plus";left=267;top=162;right=285;bottom=186;bgcolor=12895428;dl=1;dt=1;edge=1;z=34};
cTxtFocusChecked={cls="plus";left=267;top=352;right=285;bottom=376;bgcolor=11626300;dl=1;dt=1;edge=1;z=67};
cTxtHover={cls="plus";left=267;top=99;right=285;bottom=123;bgcolor=7171437;dl=1;dt=1;edge=1;z=30};
cTxtHoverChecked={cls="plus";left=267;top=289;right=285;bottom=313;bgcolor=16624779;dl=1;dt=1;edge=1;z=63};
cbAlign={cls="combobox";left=68;top=514;right=162;bottom=534;dl=1;dt=1;edge=1;items={"文本左对齐";"水平居中";"右对齐"};mode="dropdownlist";z=120};
cbIcons={cls="combobox";left=22;top=424;right=188;bottom=449;dl=1;dt=1;edge=1;font=LOGFONT(h=-16;name='FontAwesome');items={};mode="dropdown";z=126};
cbVAlign={cls="combobox";left=163;top=514;right=249;bottom=534;dl=1;dt=1;edge=1;items={"顶对齐";"垂直居中";"底对齐"};mode="dropdownlist";z=121};
chkBdActive={cls="plus";text='\uF0C8 鼠标按下';left=406;top=127;right=491;bottom=153;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=82};
chkBdActiveChecked={cls="plus";text='\uF0C8 鼠标按下';left=406;top=318;right=491;bottom=344;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=93};
chkBdDefault={cls="plus";text='\uF0C8 默认状态';left=406;top=61;right=491;bottom=87;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=78};
chkBdDefaultChecked={cls="plus";text='\uF0C8 默认状态';left=406;top=254;right=491;bottom=280;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=89};
chkBdDisabled={cls="plus";text='\uF0C8 禁用状态';left=406;top=192;right=491;bottom=218;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=86};
chkBdDisabledChecked={cls="plus";text='\uF0C8 禁用状态';left=406;top=381;right=491;bottom=407;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=97};
chkBdFocus={cls="plus";text='\uF0C8 获得焦点';left=406;top=159;right=491;bottom=185;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=84};
chkBdFocusChecked={cls="plus";text='\uF0C8 获得焦点';left=406;top=349;right=491;bottom=375;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=95};
chkBdHover={cls="plus";text='\uF0C8 鼠标进入';left=406;top=94;right=491;bottom=120;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=80};
chkBdHoverChecked={cls="plus";text='\uF0C8 鼠标进入';left=406;top=286;right=491;bottom=312;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=91};
chkBgActive={cls="plus";text='\uF0C8 鼠标按下';left=38;top=127;right=123;bottom=153;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=9};
chkBgActiveChecked={cls="plus";text='\uF0C8 鼠标按下';left=38;top=318;right=123;bottom=344;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=42};
chkBgDefault={cls="plus";text='\uF0C8 默认状态';left=38;top=61;right=123;bottom=87;dl=1;dt=1;font=LOGFONT(name='FontAwesome');notify=1;z=5};
chkBgDefaultChecked={cls="plus";text='\uF0C8 默认状态';left=38;top=254;right=123;bottom=280;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=38};
chkBgDisabled={cls="plus";text='\uF0C8 禁用状态';left=38;top=192;right=123;bottom=218;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=13};
chkBgDisabledChecked={cls="plus";text='\uF0C8 禁用状态';left=38;top=381;right=123;bottom=407;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=46};
chkBgFocus={cls="plus";text='\uF0C8 获得焦点';left=38;top=159;right=123;bottom=185;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=11};
chkBgFocusChecked={cls="plus";text='\uF0C8 获得焦点';left=38;top=349;right=123;bottom=375;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=44};
chkBgHover={cls="plus";text='\uF0C8 鼠标进入';left=38;top=94;right=123;bottom=120;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=7};
chkBgHoverChecked={cls="plus";text='\uF0C8 鼠标进入';left=38;top=286;right=123;bottom=312;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=40};
chkBorderBottom={cls="plus";text='\uF0C8 下边框';left=164;top=539;right=229;bottom=565;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=106};
chkBorderLeft={cls="plus";text='\uF0C8 左边框';left=233;top=539;right=298;bottom=565;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=107};
chkBorderRight={cls="plus";text='\uF0C8 右边框';left=96;top=539;right=161;bottom=565;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=105};
chkBorderTop={cls="plus";text='\uF0C8 上边框';left=27;top=539;right=92;bottom=565;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=104};
chkFgActive={cls="plus";text='\uF0C8 鼠标按下';left=164;top=127;right=247;bottom=153;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=20};
chkFgActiveChecked={cls="plus";text='\uF0C8 鼠标按下';left=164;top=317;right=247;bottom=343;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=53};
chkFgDefault={cls="plus";text='\uF0C8 默认状态';left=164;top=61;right=247;bottom=87;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=16};
chkFgDefaultChecked={cls="plus";text='\uF0C8 默认状态';left=164;top=253;right=247;bottom=279;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=49};
chkFgDisabled={cls="plus";text='\uF0C8 禁用状态';left=164;top=192;right=247;bottom=218;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=24};
chkFgDisabledChecked={cls="plus";text='\uF0C8 禁用状态';left=164;top=381;right=247;bottom=407;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=57};
chkFgFocus={cls="plus";text='\uF0C8 获得焦点';left=164;top=159;right=247;bottom=185;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=22};
chkFgFocusChecked={cls="plus";text='\uF0C8 获得焦点';left=164;top=349;right=247;bottom=375;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=55};
chkFgHover={cls="plus";text='\uF0C8 鼠标进入';left=164;top=94;right=247;bottom=120;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=18};
chkFgHoverChecked={cls="plus";text='\uF0C8 鼠标进入';left=164;top=285;right=247;bottom=311;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=51};
chkPreviewBackground={cls="plus";text='\uF0C8 设置预览窗口背景色';left=415;top=725;right=577;bottom=751;clipBk=false;db=1;dl=1;font=LOGFONT(name='FontAwesome');notify=1;z=103};
chkTxtActive={cls="plus";text='\uF0C8 鼠标按下';left=286;top=127;right=371;bottom=153;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=31};
chkTxtActiveChecked={cls="plus";text='\uF0C8 鼠标按下';left=286;top=318;right=371;bottom=344;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=64};
chkTxtDefault={cls="plus";text='\uF0C8 默认状态';left=286;top=61;right=371;bottom=87;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=27};
chkTxtDefaultChecked={cls="plus";text='\uF0C8 默认状态';left=286;top=254;right=371;bottom=280;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=60};
chkTxtDisabled={cls="plus";text='\uF0C8 禁用状态';left=286;top=192;right=371;bottom=218;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=35};
chkTxtDisabledChecked={cls="plus";text='\uF0C8 禁用状态';left=286;top=381;right=371;bottom=407;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=68};
chkTxtFocus={cls="plus";text='\uF0C8 获得焦点';left=286;top=159;right=371;bottom=185;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=33};
chkTxtFocusChecked={cls="plus";text='\uF0C8 获得焦点';left=286;top=349;right=371;bottom=375;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=66};
chkTxtHover={cls="plus";text='\uF0C8 鼠标进入';left=286;top=94;right=371;bottom=120;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=29};
chkTxtHoverChecked={cls="plus";text='\uF0C8 鼠标进入';left=286;top=286;right=371;bottom=312;dl=1;dt=1;font=LOGFONT(name='FontAwesome');z=62};
clrPicker={cls="pick";left=507;top=28;right=1112;bottom=434;bgcolor=16777215;dl=1;dr=1;dt=1;z=100};
editCheckedText={cls="edit";text="\uF14a";left=70;top=485;right=249;bottom=508;dl=1;dt=1;edge=1;z=73};
editGradient={cls="edit";left=226;top=727;right=325;bottom=750;dl=1;dt=1;edge=1;z=119};
editPadding={cls="edit";text="0,0,0,0  //左,上,右,下";left=70;top=660;right=233;bottom=683;dl=1;dt=1;edge=1;z=112};
editPreview={cls="richedit";left=677;top=470;right=1105;bottom=714;db=1;dl=1;dr=1;dt=1;edge=1;hscroll=1;multiline=1;vscroll=1;z=99};
editPreviewSize={cls="edit";text="150,50 //宽,高";left=70;top=727;right=160;bottom=750;dl=1;dt=1;edge=1;z=116};
editText={cls="edit";text="\uF0C8 预览按钮效果";left=70;top=456;right=249;bottom=479;dl=1;dt=1;edge=1;z=70};
editTextPadding={cls="edit";text="-0,0,0,0 //左,上,右,下";left=70;top=694;right=233;bottom=717;dl=1;dt=1;edge=1;z=114};
gbBd={cls="groupbox";text="边框色";left=377;top=38;right=496;bottom=228;bgcolor=16777215;dl=1;dt=1;edge=1;z=77};
gbBdChecked={cls="groupbox";text="边框色(勾选后)";left=377;top=230;right=496;bottom=420;bgcolor=16777215;dl=1;dt=1;edge=1;z=88};
gbBg={cls="groupbox";text="背景色";left=8;top=38;right=127;bottom=228;bgcolor=16777215;dl=1;dt=1;edge=1;z=2};
gbBgChecked={cls="groupbox";text="背景色(勾选后)";left=8;top=230;right=127;bottom=420;bgcolor=16777215;dl=1;dt=1;edge=1;z=37};
gbFg={cls="groupbox";text="前景色";left=131;top=37;right=250;bottom=227;bgcolor=16777215;dl=1;dt=1;edge=1;z=15};
gbFgChecked={cls="groupbox";text="前景色(勾选后)";left=131;top=229;right=250;bottom=419;bgcolor=16777215;dl=1;dt=1;edge=1;z=48};
gbTxtChecked={cls="groupbox";text="文本色(勾选后)";left=256;top=230;right=375;bottom=420;bgcolor=16777215;dl=1;dt=1;edge=1;z=59};
gbTxtColor={cls="groupbox";text="文本色";left=254;top=38;right=373;bottom=228;bgcolor=16777215;dl=1;dt=1;edge=1;z=26};
groupbox9={cls="groupbox";text="效果预览";left=338;top=451;right=1112;bottom=723;bgcolor=16777215;db=1;dl=1;dr=1;dt=1;edge=1;z=1};
lbBorderPadding={cls="static";text="边框外边距:";left=24;top=572;right=109;bottom=604;align="right";disabled=1;dl=1;dt=1;transparent=1;z=102};
lbBorderRadius={cls="static";text="边框圆角:";left=32;top=602;right=109;bottom=634;align="right";disabled=1;dl=1;dt=1;transparent=1;z=76};
lbBorderWidth={cls="static";text="边框宽度:";left=54;top=627;right=109;bottom=659;align="right";disabled=1;dl=1;dt=1;transparent=1;z=110};
lbCurrentState={cls="plus";left=199;top=425;right=488;bottom=447;border={color=-4144960;radius=11;width=1};color=9727;dl=1;dt=1;transparent=1;z=108};
lbGradient={cls="static";text="渐变角度:";left=164;top=729;right=221;bottom=753;align="right";dl=1;dt=1;transparent=1;z=118};
lbPadding={cls="static";text="内边距:";left=6;top=665;right=65;bottom=689;align="right";dl=1;dt=1;transparent=1;z=113};
lbPreviewSize={cls="static";text="控件大小:";left=6;top=729;right=65;bottom=753;align="right";dl=1;dt=1;transparent=1;z=117};
lbTextPadding={cls="static";text="文本边距:";left=1;top=698;right=65;bottom=722;align="right";dl=1;dt=1;transparent=1;z=115};
plusMinimized={cls="plus";left=885;top=-36;right=1006;bottom=83;clipBk=false;font=LOGFONT(h=-13;name='FontAwesome');foreground="\.img\designPlus.png";hide=1;linearGradient=20;notify=1;repeat="center";z=125};
plusPreview={cls="plus";left=429;top=567;right=579;bottom=617;db=1;dl=1;font=LOGFONT(h=-16;name='FontAwesome');notify=1;z=4};
static={cls="static";text="默认文本:";left=0;top=459;right=65;bottom=489;align="right";dl=1;dt=1;transparent=1;z=71};
static2={cls="static";text="勾选文本:";left=0;top=487;right=65;bottom=517;align="right";dl=1;dt=1;transparent=1;z=72};
tbBorderPadding={cls="trackbar";left=108;top=565;right=293;bottom=595;bgcolor=16777215;disabled=1;dl=1;dt=1;max=100;min=0;ntk=1;z=101};
tbBorderRadius={cls="trackbar";left=108;top=597;right=293;bottom=627;bgcolor=16777215;disabled=1;dl=1;dt=1;max=100;min=0;ntk=1;z=75};
tbBorderWidth={cls="trackbar";left=108;top=629;right=293;bottom=659;bgcolor=16777215;disabled=1;dl=1;dt=1;max=100;min=0;ntk=1;z=109}
)
/*}}*/

winform.btnUpdateForm.skin({
	background={
		default=0xFFC8DBCD;
		hover=0xFFB7B2D2
	};
	foreground={
		default=0xFFB3C4B7;
		hover=0xFFCAC7DA
	};
})

winform.btnOpenColorTable.skin({
	background={
		default=0xFFC8DBCD;
		hover=0xFFB7B2D2
	};
	foreground={
		default=0xFFB3C4B7;
		hover=0xFFCAC7DA
	};
})

winform.btnPreviewCode.skin({
	background={
		default=0xFFC8DBCD;
		hover=0xFFB7B2D2
	};
	foreground={
		default=0xFFB3C4B7;
		hover=0xFFCAC7DA
	};
})
 
import gdip.imageAttributes;
var miniImgAttr = gdip.imageAttributes();
miniImgAttr.setRgba(1.05,1.05,1);
winform.plusMinimized.onStateChange = function(){
	if(winform.plusMinimized.state.hover){ 
		winform.plusMinimized.imageAttributes = miniImgAttr;
	}
	else {
		winform.plusMinimized.imageAttributes = null;
	}
	winform.plusMinimized.redrawTransparent();
	
}

import win.ui.atom;
var atom,hwnd = winform.atom("0CCD6A28-2296-4C26-9AC7-80AC4B585E27.PLUSAWESOME");
if(!atom){
    win.setForeground(hwnd);
	win.quitMessage();	
	return;
}

import win.ui.simpleWindow;
win.ui.simpleWindow(winform,,,24);

var previewStyle = {}

winform.clrPicker.onColorChange = function(argb){
	if(winform.currentColorCtrl){
		winform.currentColorCtrl.background = argb;
		if(winform.currentChkColorCtrl.checked){
			winform.onStyleChanged(
				winform.currentChkColorCtrl.styleCtrlName,
				winform.currentChkColorCtrl.checked,
				argb
				);
		} 
	} 
}

for(name,ctrl in winform.eachControl("plus") ){
    if(name[1]=='c'#){
    	if(string.match(name,"^c<Bg>|<Fg>|<Txt>|<Bd>") ){ 
    		ctrl.onFocusGot = function(wParam,lParam){
    			if(!owner.checkColorCtrl){
    				return;
    			}
    			winform.currentChkColorCtrl = owner.checkColorCtrl;
				winform.currentColorCtrl = owner;
				owner.checkColorCtrl.setFocus();
				owner.checkColorCtrl.oncommand();
				return 0;
    		}
    		
    		ctrl.skin( 
    			border = { 
    				hover = {width=3;color=0x80FF0000}  
        			focus = {width=1;color=0xFFFF0000}  
    			} 
			) 
			
			continue ; 
    	}
    	
    }
    if(string.startWith(name,"chk") ){
        if(string.startWith(name,"chkBorder") ){
           
     		ctrl.skin(
    			color = { 
        			hover = 0xFFFF0000; 
        			active = 0xFF00FF00;
        			disabled = 0xFFCCCCCC;
    			}
    			checked = {
    				text = '\uF14a'/*_FA_CHECK_SQUARE*/;
    			}  
			) 
			ctrl.checked = true;
            ctrl.disabled = true;
            
			ctrl.oncommand = function(id,event){ 
			 	var chkCtrl = winform.currentChkColorCtrl;
				if(chkCtrl ? string.startWith(chkCtrl.styleCtrlName,"chkBd") ){
					winform.onStyleChanged(
						winform.currentChkColorCtrl.styleCtrlName,
						winform.currentChkColorCtrl.checked,
						winform.currentColorCtrl.backgroundColor
						);	
				}
			}
			continue;
        }
        
     	ctrl.skin(
    		color = { 
        		hover = 0xFFFF0000; 
        		active = 0xFF00FF00;
    		}
    		checked = {
    			text = '\uF14a'/*_FA_CHECK_SQUARE*/;
    			border ={
    				focus = {bottom=1;color=0xFF000000;padding=15;}
    			};
    		} 
    		border ={
    			focus = {bottom=1;color=0xFF000000;padding=15;};
    		}
		) 
		
		var clrCtrl = winform["c" + string.right(name,-4) ];  
		if(!clrCtrl) continue;

		clrCtrl.checkColorCtrl = ctrl;
		ctrl.styleCtrlName = name;
		if(string.startWith(name,"chkBd") ){
			ctrl.oncommand = function(id,event){ 
				winform.chkBorderTop.disabled = false;
				winform.chkBorderBottom.disabled = false;
				winform.chkBorderRight.disabled = false;
				winform.chkBorderLeft.disabled = false;
				winform.tbBorderRadius.disabled = false;
				winform.tbBorderWidth.disabled = false;
				winform.tbBorderPadding.disabled = false;
				winform.lbBorderRadius.disabled = false;
				winform.lbBorderPadding.disabled = false;
				winform.lbBorderWidth.disabled = false;
				
				winform.chkPreviewBackground.checked = false;
				
				winform.currentChkColorCtrl = ctrl;
				winform.currentColorCtrl = clrCtrl;
				if(clrCtrl.backgroundColor===null)clrCtrl.background = 0xFF00AEFF; 
				winform.clrPicker.setColor( clrCtrl.backgroundColor : 0xFF00AEFF ); 
				
				winform.onStyleChanged(
					winform.currentChkColorCtrl.styleCtrlName,
					winform.currentChkColorCtrl.checked,
					winform.currentColorCtrl.backgroundColor
					);
			}
		}
		else {
			ctrl.oncommand = function(id,event){ 
				winform.chkBorderTop.disabled = true;
				winform.chkBorderBottom.disabled = true;
				winform.chkBorderRight.disabled = true;
				winform.chkBorderLeft.disabled = true;
				winform.tbBorderRadius.disabled = true;
				winform.tbBorderPadding.disabled = true;
				winform.tbBorderWidth.disabled = true;
				winform.lbBorderRadius.disabled = true;
				winform.lbBorderPadding.disabled = true;
				winform.lbBorderWidth.disabled = true;
				
				winform.chkPreviewBackground.checked = false;
				
				winform.currentChkColorCtrl = ctrl;
				winform.currentColorCtrl = clrCtrl;
				if(clrCtrl.backgroundColor===null)clrCtrl.background = 0xFF00AEFF; 
				winform.clrPicker.setColor( clrCtrl.backgroundColor : 0xFF00AEFF ); 
				
				winform.onStyleChanged(
					winform.currentChkColorCtrl.styleCtrlName,
					winform.currentChkColorCtrl.checked,
					winform.currentColorCtrl.backgroundColor
					);
			}
		}
		
    } 
}

import util.table;
winform.onStyleChanged = function(styleCtrlName,styleCtrlChecked,styleCtrlColor){
    if(styleCtrlName=="chkPreviewBackground"){
    	return;
    }
    
    if(styleCtrlColor===null){
    	styleCtrlChecked = false;
    	winform[styleCtrlName].checked = false;
    }
    
	var style = previewStyle;
	var styleStateTitle = ""
	if( string.endWith(styleCtrlName,"Checked") ){
		if(!style.checked) style.checked = {} 
		style = style.checked;
		styleStateTitle = "(勾选后)"
	}
	
	var styleState = "default";
	if(string.find(styleCtrlName,"Hover")){
		styleState = "hover";
		styleStateTitle = "鼠标进入" + styleStateTitle;
	}
	elseif(string.find(styleCtrlName,"Active")){
		styleState = "active";
		styleStateTitle = "鼠标按下" + styleStateTitle;
	}
	elseif(string.find(styleCtrlName,"Focus")){
		styleState = "focus";
		styleStateTitle = "获得焦点" + styleStateTitle;
	}
	elseif(string.find(styleCtrlName,"Disabled")){
		styleState = "disabled";
		styleStateTitle = "禁用状态" + styleStateTitle;
	}
	else {
		styleStateTitle = "默认状态" + styleStateTitle;
	}
		
	if(string.startWith(styleCtrlName,"chkBg")){
		if(!style.background)style.background={};
		style.background[styleState] = styleCtrlChecked ? styleCtrlColor : null
		winform.lbCurrentState.text = "正在编辑：背景色 " + styleStateTitle;
		if(!table.count(style.background)){
			style.background = null;
		}
	}
	elseif(string.startWith(styleCtrlName,"chkFg")){
		if(!style.foreground)style.foreground={};
		style.foreground[styleState] = styleCtrlChecked ? styleCtrlColor : null
		winform.lbCurrentState.text = "正在编辑：背景色 " + styleStateTitle;
		if(!table.count(style.foreground)){
			style.foreground = null;
		}
	}
	elseif(string.startWith(styleCtrlName,"chkTxt")){
		if(!style.color)style.color={};
		style.color[styleState] = styleCtrlChecked ? styleCtrlColor : null
		winform.lbCurrentState.text = "正在编辑：文本色 " + styleStateTitle;
		
		if(!table.count(style.color)){
			style.color = null;
		}
	}
	elseif(string.startWith(styleCtrlName,"chkBd")){
		winform.lbCurrentState.text = "正在编辑：边框色 " + styleStateTitle;
		
		if(!style.border)style.border={};
		if(styleCtrlChecked){
			var top = winform.chkBorderTop.checked;
			var bottom = winform.chkBorderBottom.checked;
			var right = winform.chkBorderRight.checked;
			var left = winform.chkBorderLeft.checked;
			var width = winform.tbBorderWidth.pos;
			width = width : null;
			
			var padding = winform.tbBorderPadding.pos;
			padding = padding : null;
			
			var radius = winform.tbBorderRadius.pos;
			radius = radius : null;
			
			if(top && bottom && right && left){
				style.border[styleState] = {width=width;color=width?styleCtrlColor:null;radius=radius;padding=padding}
			}
			else {
				style.border[styleState] = {top=top?width:null;bottom=bottom?width:null;right=right?width:null;left=left?width:null;color=width?styleCtrlColor:null;radius=radius;padding=padding}
			}
			
			if(!table.count(style.border[styleState])){
				style.border[styleState] = null;
			}
		}
		else {
			style.border[styleState] = null;
		}
		
		if(!table.count(style.border)){
			style.border = null;
		}
	}

	if( #winform.editCheckedText.text &&  winform.editCheckedText.text != winform.editText.text){
		try{
			var str = string.trim(winform.editCheckedText.text);
			previewStyle.checked.text = string.unescape(str); 
		}
	}
	else {
		if(previewStyle.checked) previewStyle.checked.text = null;
	}
	
	if(previewStyle.checked && !table.count(previewStyle.checked)){
		previewStyle.checked = null;
	}
	
	var styleChecked = previewStyle.checked;
	var strChecked;
	if(styleChecked){
		strChecked = util.table.stringify(styleChecked,true,{'background';'foreground';'color';'border';'checked';"text"});

		strChecked = string.replace(strChecked,"\n\w+\=\{\};?","");
		strChecked = string.replace(strChecked,`(\a+\=)(%{})`,function(k,v){
			return k + '{\n\t' + string.slice(v,2,-2) + '\n}'
		});
		strChecked = string.replace(strChecked,`(<default>|<hover>|<active>|<disabled>|<focus>=[^{};]+;)`,function(v){ 
			return v + '\n\t';
		});
		
		strChecked = string.replace(strChecked,"\n",'\n\t');
		strChecked = string.replace(strChecked,"\n\t",'\n\t\t');
		
		strChecked = string.replace(strChecked,"\-?\d+[\x']?!",function(clr){
			var n = tonumber(clr);
			if(n > 0xFFFFFF || n < 0 ){
				return string.format("0x%08X",n )
			} 
		});
		strChecked = string.replace(strChecked,"\{\s+\}","")
		if(#strChecked){
			strChecked = string.replace(strChecked,"\s+\}$",'\n\t}')
			strChecked = string.replace(strChecked,"\\","\\\\")
			previewStyle.checked = "${PLUS$SKING$选中状态}"
		}
		else {
			previewStyle.checked = null;
		} 	
	}
	previewStyle.checked = styleChecked;
	if(previewStyle.checked && !table.count(previewStyle.checked)){
		previewStyle.checked = null;
	}
	
	var strDefault = util.table.stringify(previewStyle,true,{'background';'foreground';'color';'border';'checked'});
	strDefault = string.replace(strDefault,"\n\w+\=\{\};?","");
	strDefault = string.replace(strDefault,`(\a+\=)(%{})`,function(k,v){
		return k + '{\n\t' + string.slice(v,2,-2) + '\n}'
	});
	strDefault = string.replace(strDefault,`(<default>|<hover>|<active>|<disabled>|<focus>=[^{};]+;)`,function(v){ 
		return v + '\n\t';
	});
	
	strDefault = string.replace(strDefault,"\n",'\n\t');
	strDefault = string.replace(strDefault,"\-?\d+",function(clr){
		var n = tonumber(clr);
		if(n > 0xFFFFFF || n < 0 ){
			return string.format("0x%08X",n )
		} 
	});
	
	if(strChecked){
		 strDefault = string.replace(strDefault,`@"${PLUS$SKING$选中状态}"`,strChecked);
	}

	strDefault = string.replace(strDefault,"\n\s*\n",'\n');
	strDefault = string.replace(strDefault,"\s+\}\s*$",'\n}')
	
	winform.editPreview.text = '//前景色、背景色可以都改为图像路径\nwinform.plus.skin(' + strDefault + ")";
	
	var previewStyle2 = table.clone(previewStyle);
	
	winform.plusPreview.background = null;
	winform.plusPreview.foreground = null;
	winform.plusPreview.border = null;

	winform.plusPreview.skin(previewStyle2);	
	winform.plusPreview.redrawTransparent();
} 

winform.cPreviewBackground.background = 0xFFF5F5F5;

winform.editText.oncommand = function(id,event){
	if(event == 0x300/*_EN_CHANGE*/){ 
		try{
			var str =  string.unescape(owner.text);
			winform.plusPreview.checked = false; //修改选中前的文本
			winform.plusPreview.text = string.trim(str:"");
			winform.onStyleChanged("chkBgDefault",winform.chkBgDefault.checked,winform.cBgDefault.backgroundColor);
		}
	}
	elseif(event==0x100/*_EN_SETFOCUS*/){
		winform.lastEditText = winform.editText
	}
	
}

winform.editCheckedText.oncommand = function(id,event){
	if(event == 0x300/*_EN_CHANGE*/){
		try{
			var str = string.unescape(owner.text)
			winform.onStyleChanged("chkBgDefaultChecked",winform.chkBgDefaultChecked.checked,winform.cBgDefaultChecked.backgroundColor);
		}
	}
	elseif(event==0x100/*_EN_SETFOCUS*/){
		winform.lastEditText = winform.editCheckedText
	}	
}

winform.strImport = 'import fonts.fontAwesome;\r\n'
winform.button.oncommand = function(id,event){
	var fontAwesome = winform.loadForm("~\tools\界面\fontAwesome.aardio");
	fontAwesome.onSetIcon = function(text,font,strImport){
		var text = string.escape(text,true,true);
		var ctrl = winform.lastEditText : winform.editText; 
		
		var str = ctrl.text;
		var str,count = string.replace(str,"\\u\x\x\x\x","\" + text);
		if(!count){
			str = text + " "  + str;
		}
		
		if(font.name=="FontAwesome"){
			winform.cbIcons.setFont(name=font.name);
			winform.cbIcons.items ={
				'\uF0C8 \\uF0C8 \uF14A \\uF14A';
				'\uF204 \\uF204 \uF205 \\uF205';
				'\uF04B \\uF04B \uF04C \\uF04C';
				'\uF026 \\uF026 \uF027 \\uF027';
				'\uF111 \\uF111 \uF058 \\uF058';
				'\uF10C \\uF10C \uF05D \\uF05D';
				'\uF10C \\uF10C \uF192 \\uF192';
				'\uF273 \\uF273 \uF274 \\uF274';
				'\uF096 \\uF096 \uF046 \\uF046';
			}
		}
	 
		winform.strImport = strImport;
		winform.plusPreview.setFont(name=font.name);
		ctrl.text = str;
	}
}

winform.chkPreviewBackground.oncommand = function(id,event){
	winform.lbCurrentState.text = "正在编辑预览按钮窗口背景色" ;
	winform.currentChkColorCtrl = owner;
	winform.currentColorCtrl = winform.cPreviewBackground; 
	winform.clrPicker.setColor( winform.cPreviewBackground.backgroundColor : 0xFFF5F5F5 ); 
	winform.chkBorderTop.disabled = true;
	winform.chkBorderBottom.disabled = true;
	winform.chkBorderRight.disabled = true;
	winform.chkBorderLeft.disabled = true;
	winform.tbBorderRadius.disabled = true;
	winform.tbBorderPadding.disabled = true;
	winform.tbBorderWidth.disabled = true;
	winform.lbBorderRadius.disabled = true;
	winform.lbBorderPadding.disabled = true;
	winform.lbBorderWidth.disabled = true;
}

winform.tbBorderRadius.oncommand = function(id,event,pos){
	var chkCtrl = winform.currentChkColorCtrl;
	if(chkCtrl ? string.startWith(chkCtrl.styleCtrlName,"chkBd") ){
		winform.onStyleChanged(
			winform.currentChkColorCtrl.styleCtrlName,
			winform.currentChkColorCtrl.checked,
			winform.currentColorCtrl.backgroundColor
			);	
	}
}

winform.tbBorderPadding.oncommand = function(id,event,pos){
	var chkCtrl = winform.currentChkColorCtrl;
	if(chkCtrl ? string.startWith(chkCtrl.styleCtrlName,"chkBd") ){
		winform.onStyleChanged(
			winform.currentChkColorCtrl.styleCtrlName,
			winform.currentChkColorCtrl.checked,
			winform.currentColorCtrl.backgroundColor
			);	
	}
}

winform.tbBorderWidth.oncommand = function(id,event,pos){
	var chkCtrl = winform.currentChkColorCtrl;
	if(chkCtrl ? string.startWith(chkCtrl.styleCtrlName,"chkBd") ){
		winform.onStyleChanged(
			winform.currentChkColorCtrl.styleCtrlName,
			winform.currentChkColorCtrl.checked,
			winform.currentColorCtrl.backgroundColor
			);	
	}
}

import ide;
import color;
import string.template;
winform.getPreviewCode = function(){
	var strTemplateCode = /**
import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";bgcolor=${FORMCOLOR})
winform.add(
plus={cls="plus";text="${TEXT}";align="${ALIGN}";valign="${VALIGN}";font=LOGFONT(${FONT})${BGCOLOR}${FORECOLOR}${BORDER}${PADDING}${TEXTPADDING}${GRADIENT};left=447;top=346;right=${WIDTH};bottom=${HEIGHT};z=1;}
)
/*}}*/
${SKIN}

winform.show() 
win.loopMessage();
**/

	strTemplateCode = winform.strImport ++ strTemplateCode;
 
	var strForegroundPadding = ""; 
	var paddings = string.map(winform.editPadding.text)
	if(#paddings==4 ){
    	
    	var count = reduce(paddings,lambda(prev,next) prev + next )
    	
    	if(count){
    	 	strForegroundPadding = string.format(";paddingLeft=%d;paddingTop=%d;paddingRight=%d;paddingBottom=%d",paddings[1],paddings[2],paddings[3],paddings[4])
    		strForegroundPadding = string.replace(strForegroundPadding,";\w+=0","");
    	}
	} 
	
	var strTextPadding = ""; 
	var paddings = string.map(winform.editTextPadding.text)
	if(#paddings==4){
    	var count = reduce(paddings,lambda(prev,next) prev + next )
    	
    	if(count){
    		var textPadding = {
				left = paddings[1]:null;
				top = paddings[2]:null;
				bottom = paddings[3]:null;
				right = paddings[4]:null;
			}
			strTextPadding = ";textPadding=" + table.tostring(textPadding);	
    	}
	
	}
	
	var strGradient = "";
	var value = string.map(winform.editGradient.text)
	if(#value==1){
		strGradient = string.format(';linearGradient=%d',value[1] );
	}	
	
	var previewWidth,previewHeight = 447+150,346+50;
	var size = string.map(winform.editPreviewSize.text)
	if(#size==2){
		var cx,cy = size[1],size[2];
		if(cx>300) cx = 300;
		if(cy>320) cy = 320;
		if(cx<32) cx = 32;
		if(cy<32) cy = 32;
		previewWidth = 447+cx;
		previewHeight = 346+cy;
	}
	winform.plusPreview.redrawTransparent();

	var template = string.template(strTemplateCode);
	var code = template.format(
		TEXTPADDING = strTextPadding;
		PADDING = strForegroundPadding;
		GRADIENT = strGradient;
		WIDTH = previewWidth;
		HEIGHT = previewHeight;
		SKIN = winform.editPreview.text;
		FORMCOLOR = tostring(  color.rgbReverse( winform.cPreviewBackground.backgroundColor ) &0xFFFFFF,16 );
		TEXT = string.unescape(string.trim(winform.editText.text)):"";
		ALIGN = winform.plusPreview.align :"center";
		VALIGN = winform.plusPreview.valign:"center";
		FONT = table.tostring(winform.plusPreview.getFont());
		BGCOLOR = winform.chkBgDefault.checked ? ";bgcolor=" + tostring((gdi.rgbReverse(winform.cBgDefault.backgroundColor) & 0xFFFFFF)) : "";
		FORECOLOR = winform.chkFgDefault.checked ? ";forecolor=" + tostring((gdi.rgbReverse(winform.cFgDefault.backgroundColor) & 0xFFFFFF)) : "";
		BORDER = winform.chkBdDefault.checked ? ..string.format(";border={left=%d;top=%d;right=%d;bottom=%d;color=%d;radius=%d}"
			,winform.chkBorderLeft.checked ? winform.tbBorderWidth.pos : 0
			,winform.chkBorderTop.checked ? winform.tbBorderWidth.pos : 0
			,winform.chkBorderRight.checked ? winform.tbBorderWidth.pos : 0
			,winform.chkBorderBottom.checked ? winform.tbBorderWidth.pos : 0 
			,(gdi.rgbReverse(winform.cBdDefault.backgroundColor) & 0xFFFFFF )
			,winform.tbBorderRadius.pos ) : "";
	)
	
	return code;
}

winform.btnPreviewCode.oncommand = function(id,event){
	var preViewCode = winform.getPreviewCode();
	if(#preViewCode){
		ide.newForm(preViewCode);
		winform.hitmin();	
	}
}

winform.plusPreview.text = string.unescape( string.trim(winform.editText.text) );

winform.chkBgDefault.checked = true;
winform.chkBgHover.checked = true;
winform.chkPreviewBackground.checked = false;
winform.currentChkColorCtrl = winform.chkBgDefault;
winform.currentColorCtrl = winform.cBgDefault; 
winform.currentChkColorCtrl = winform.chkBgHover;
winform.currentColorCtrl = winform.cBgHover; 			
winform.tbBorderRadius.setRange(0,50);
winform.tbBorderPadding.setRange(0,50);
winform.tbBorderWidth.setRange(0,20);

winform.editPreview.enablePopMenu();
winform.cPreviewBackground.directDrawBackgroundOnly();
winform.onDrawBackgroundEnd = function(hdc,rc){
    winform.plusPreview.redrawTransparent();
}

import win.dlg.font;
winform.btnFont.oncommand = function(id,event){
	var dlg = win.dlg.font(winform)
	dlg.logFont = winform.plusPreview.getFont();
	var font = dlg.chooseFont(); 
	if(font){
		winform.plusPreview.setFont(font);
		winform.plusPreview.redraw();
		
		var font = winform.plusPreview.getFont()
	}
}

winform.editPadding.oncommand = function(id,event){
	var paddings = string.map(owner.text)
	if(#paddings==4){
		winform.plusPreview.paddingLeft = paddings[1]; 
		winform.plusPreview.paddingTop = paddings[2];
		winform.plusPreview.paddingRight = paddings[3];
		winform.plusPreview.paddingBottom = paddings[4];
		winform.plusPreview.redrawTransparent()
	}
}

winform.editTextPadding.oncommand = function(id,event){
	var paddings = string.map(owner.text)
	if(#paddings==4){
		winform.plusPreview.textPadding = {
			left = paddings[1];
			top = paddings[2];
			bottom = paddings[3];
			right = paddings[4];
		};
		winform.plusPreview.redrawTransparent();
	}	
}

winform.editGradient.oncommand = function(id,event){
	var value = string.map(owner.text)
	if(#value==1 && value[1]>-2){
		winform.plusPreview.linearGradient = value[1];
		winform.plusPreview.redrawTransparent()
	}
	else {
		winform.plusPreview.linearGradient = null;
		winform.plusPreview.redrawTransparent()
	}
	
}

winform.editPreviewSize.oncommand = function(id,event){
	var size = string.map(owner.text)
	if(#size==2){
		var cx,cy = size[1],size[2];
		if(cx>300) cx = 300;
		if(cy>320) cy = 320;
		if(cx<32) cx = 32;
		if(cy<32) cy = 32;
		var rc = winform.plusPreview.getRect();
		rc.inflate((cx - rc.width())/2,(cy - rc.height())/2)
		winform.plusPreview.setRect(rc);
	}	
}

winform.cbAlign.selIndex = 2;
winform.cbVAlign.selIndex = 2;
winform.cbAlign.oncommand = function(id,event){
	winform.plusPreview.align =({"left";"center";"right"})[winform.cbAlign.selIndex];
	winform.plusPreview.redrawTransparent();
}

winform.cbVAlign.oncommand = function(id,event){
	winform.plusPreview.valign  =({"top";"center";"bottom"})[winform.cbVAlign.selIndex];
	winform.plusPreview.redrawTransparent()
}

var pickerSetColor = winform.clrPicker.setColor;
	winform.clrPicker.setColor  = function(){}
	
	import fsys.config;
	var config = fsys.config( io.appData("/aardio/designPlus6") )
	winform.bindConfig( config.winform,{
		plus = {
			["^c[A-Z]"] = "backgroundColor";
			["^chk"] = "checked";
		}; 
		edit = "text";
		previewChecked = "pos";
		plusPreview = "font";
		combobox = "selIndex";
		trackbar = "pos";
		checkbox = "checked";
	} );
	winform.cbAlign.oncommand();
	winform.cbVAlign.oncommand();
	
	for(name,ctrl in winform.eachControl("plus") ){ 
		if(string.startWith(name,"chk") ){
    		ctrl.oncommand ();
		}
	}
winform.clrPicker.setColor  = pickerSetColor;

import ide;
winform.btnUpdateForm.oncommand = function(id,event){
    var formName = ide.getActiveForm();
	if(!formName){
		winform.msgboxErr("请在aardio中打开并切换到窗体设计器");
		return;
	}
	
	var ctrlName = ide.getSelectedControl();
	if(!ctrlName){
		winform.msgboxErr("当前窗体设计器中未选定plus控件");
		return;	
	}
	
	var ctrlParam = ide.getControlParam(ctrlName);
	if(ctrlParam.cls!="plus"){
		winform.msgboxErr("当前选定的不是plus控件");
		return;
	}
	
	if(winform.chkBgDefault.checked){
		ctrlParam.bgcolor = gdi.argbReverse(winform.cBgDefault.backgroundColor) 
	}
	else {
		ctrlParam.bgcolor = null;
	}
	
	
	if(winform.chkFgDefault.checked){
		ctrlParam.forecolor = gdi.argbReverse(winform.cFgDefault.backgroundColor) 
	}
	else {
		ctrlParam.forecolor = null;
	}
	
	
	if(winform.chkBdDefault.checked){
		winform.plusPreview.checked = false;
		ctrlParam.border = winform.plusPreview.border;
	}
	else {
		ctrlParam.border = null;
	}
	
	ctrlParam.linearGradient = winform.plusPreview.linearGradient;
	ctrlParam.textPadding = winform.plusPreview.textPadding;
	ctrlParam.paddingLeft = winform.plusPreview.paddingLeft;
	ctrlParam.paddingRight = winform.plusPreview.paddingRight;
	ctrlParam.paddingTop = winform.plusPreview.paddingTop;
	ctrlParam.paddingBottom = winform.plusPreview.paddingBottom;
	ctrlParam.align  = winform.plusPreview.align;
	ctrlParam.valign  = winform.plusPreview.valign;
	
	var newText;
	try{
		newText = string.unescape(winform.editText.text)	
	}
	
	var font = winform.plusPreview.getFont();
	if(!#ctrlParam.text){
		if(ctrlParam.font["name"] != font.name ){
			ctrlParam.font = font;
		}
		if(#newText)ctrlParam.text = newText;
	}
	elseif(#newText){
		
		newText = string.toUnicode( newText );
		if( newText[1] >= 0xE000 && newText[1]  <=0xF8FF ){
			newText = newText[[1]]
		}
		elseif( newText[#newText/2] >= 0xE000 && newText[#newText/2]  <= 0xF8FF ){
			newText = newText[[#newText/2]]
		}
		else {
			newText = null;
		}
		
		if(#newText){
			newText = string.fromUnicode(newText);
			var text = string.toUnicode(string.trim(ctrlParam.text))
			if( text[1] >= 0xE000 && text[1]  <=0xF8FF ){
				ctrlParam.font["name"] = font.name;
				ctrlParam.text = newText ++ string.right(ctrlParam.text,-2,true)
			}
			elseif( text[#text/2] >= 0xE000 && text[#text/2]  <=0xF8FF ){
				ctrlParam.font["name"] = font.name;
				ctrlParam.text =  string.left(ctrlParam.text,-2,true) ++ newText;
			}
			else {
				ctrlParam.font = font;
		
				if( #ctrlParam.text <= 2 ) {
					ctrlParam.text = newText;
				}
				else {
					ctrlParam.text = newText + " " + ctrlParam.text ;
				} 
			}	
		} 
	}  
	 
	if(winform.chkBdDefault.checked){
		ctrlParam.border = winform.plusPreview[["(skin-setting)"]].border[["default"]];
	}
	
	if(winform.chkTxtDefault.checked){
		winform.plusPreview.checked = false;
		ctrlParam.color = gdi.rgbReverse(winform.plusPreview.argbColor)
		ctrlParam.font.color = ctrlParam.color  
	}
	
	if(!ide.setControlParam(ctrlName,ctrlParam)){
		winform.msgboxErr("更新窗体设计器中选定控件参数失败");
		return;
	} 
	
	var frmCode = ide.getActiveCode();
	if(frmCode){
		var preViewParam;
		var preViewCode = winform.getPreviewCode();
		if(!#preViewCode){
			winform.msgboxErr("获取预览代码失败");
		}
		
		frmCode = string.replace(frmCode,formName + "\." + ctrlName+"\.skin\s*(\s*%\(\)\s*)\s*[\r\n]*","");
		
		var skinPreview = winform.editPreview.text;
		skinPreview = string.replace(skinPreview,"\w+\.\w+\.skin(%\(\))",formName + "." + ctrlName+ ".skin\1");
		skinPreview = string.replace(skinPreview,"//\N+[\r\n]+","");
		
		frmCode = string.replace(frmCode,"(/\*DSG\{\{\*/(.+?)/\*\}\}\*/)",function(dsg){
			return dsg + '\r\n' + ..string.trim(skinPreview);
		},1)
	
		if(ctrlParam.font["name"] = font.name){
			if( !string.find(frmCode,"@" + winform.strImport) ){
				frmCode = winform.strImport ++ frmCode ;
			}
		};
		
		ide.setActiveCode(frmCode);
		ide.setSelectedControl(ctrlName);
	} 
}

winform.btnUpdateForm.onMouseEnter = function(wParam,lParam){
    winform.transparent(0)
}

winform.btnUpdateForm.onMouseLeave = function(wParam,lParam){
	winform.transparent(false)
}

winform.btnUpdateForm.orphanWindow(false)

winform.plusMinimized.onMouseDown = function(wParam,lParam){
    if(winform.plusMinimized.hide){
    	return;
    }
    winform.plusMinimized.show(false);
    
    var rc = winform.getRect();
    var rcWork = win.getMonitorInfo(winform.hwnd).rcWork;
    if(rc.right>rcWork.right){
    	rc.offset(rcWork.right-rc.right,0);
    }
    if(rc.bottom>rcWork.bottom){
    	rc.offset(0,rcWork.bottom-rc.bottom);
    }
    winform.setRect(rc);
    
	winform.transparent(false);
	winform.btnUpdateForm.show(4/*_SW_SHOWNOACTIVATE*/);
	win.setActive(winform.hwnd);
	
	if(winform.plusMinimized.state.hover){
		winform.hitCaption()
		
	}
}

winform.onActivateApp = function(activated,threadId){
	if(!activated){
		winform.transparent(0)
		winform.plusMinimized.show(4/*_SW_SHOWNOACTIVATE*/);
		winform.btnUpdateForm.show(false);
	}
	else {
		winform.plusMinimized.onMouseDown();
	}
	
}
winform.plusMinimized.orphanWindow(true);

winform.onMinimize = function(lParam){
	winform.btnUpdateForm.show(false);
	winform.transparent(0)
	winform.plusMinimized.show(4/*_SW_SHOWNOACTIVATE*/);
	return true;	
}

winform.cbIcons.items ={
	'\uF0C8 \\uF0C8 \uF14A \\uF14A';
	'\uF204 \\uF204 \uF205 \\uF205';
	'\uF04B \\uF04B \uF04C \\uF04C';
	'\uF026 \\uF026 \uF027 \\uF027';
	'\uF111 \\uF111 \uF058 \\uF058';
	'\uF10C \\uF10C \uF05D \\uF05D';
	'\uF10C \\uF10C \uF192 \\uF192';
	'\uF273 \\uF273 \uF274 \\uF274';
	'\uF096 \\uF096 \uF046 \\uF046';
}

winform.cbIcons.oncommand = function(id,event){
	if(event==1/*_CBN_SELCHANGE*/){
		var str = winform.cbIcons.selText;
		var a,b = string.match(str,"(\\u\x\x\x\x).+(\\u\x\x\x\x)");
		if(a && b ){
			winform.plusPreview.setFont(name=winform.cbIcons.getFont().name);
			
			var str = winform.editText.text;
			str,count  = string.replace(str,"(\\u\x\x\x\x)","\"+a);
			if(!count){
				if(#str) str = a +" " + str;
				else str = a;
			}
			winform.editText.text = str;
			
			var str = winform.editCheckedText.text;
			str,count  = string.replace(str,"(\\u\x\x\x\x)","\"+b);
			if(!count){
				if(#str) str = b +" " + str;
				else str = b;
			}
			winform.editCheckedText.text = str;
		}
	}
}

winform.btnOpenColorTable.oncommand = function(id,event){
	
	var clrName,clrNameEn;
	var bg,fg,txt,border = {chk={}},{chk={}},{chk={}},{chk={}};
	
	for(name,ctrl in winform.eachControl("plus") ){
		var clr = ctrl.backgroundColor;
		if(!clr){
			continue;
		}
		
		var tab;
		if( string.startWith(name,"cBg") ){
			clrName = "背景"
			clrNameEn = "background"
			tab = bg;
		}
		elseif( string.startWith(name,"cFg") ){
			clrName = "前景"
			clrNameEn = "foreground"
			tab = fg;
		}
		elseif( string.startWith(name,"cTxt") ){
			clrName = "文本"
			clrNameEn = "text"
			tab = txt;
		}
		elseif( string.startWith(name,"cBd") ){
			clrName = "边框"
			clrNameEn = "border"
			tab  = border;
		}
		else{
			continue ;
		}
		
		if( string.endWith(name,"Checked") ){
			clrName = clrName+"/勾选"
			clrNameEn = clrNameEn + "/checked"
			tab = tab.chk;
		}
		
		if(string.find(name,"Hover")){
			clrNameEn = clrNameEn + "/hover";
			clrName = clrName+"/鼠标进入"
		}
		elseif(string.find(name,"Active")){
			clrNameEn = clrNameEn + "/active";
			clrName = clrName+"/鼠标按下"
		}
		elseif(string.find(name,"Focus")){
			clrNameEn = clrNameEn + "/focus";
			clrName = clrName+"/获得焦点"
		}
		elseif(string.find(name,"Disabled")){
			clrNameEn = clrNameEn + "/disabled";
			clrName = clrName+"/禁用状态"
		}
		else {
			clrNameEn = clrNameEn + "/default";
			clrName = clrName+"/默认状态"
		}
		
		table.push(tab,{
			clrName;clrNameEn;color.rgbReverse(clr);
		});	
	}
	 
	var clrTable = {}
	var tab ={bg;fg;txt;border}
	for i,v in table.eachIndex(tab){
		table.sort(v,function(b){
			var a,b = owner[1],b[1]; 
			return a < b;
		})	
		table.append(clrTable,v);
	}
 	for i,v in table.eachIndex(tab){
		table.sort(v.chk,function(b){
			var a,b = owner[1],b[1]; 
			return a < b;
		})	
		table.append(clrTable,v.chk)
	}
	winform.clrPicker.openColorTable(clrTable); 
}

winform.onDropFiles = function(files){
	var path = files[1];
	if(!..string.endWith(path,".colors")){
		return;
	}
	
	var str = ..string.load(path);
	if(#str && str[1]=='{'#){
		var tab = eval(str)
		winform.clrPicker.openColorTable(tab); 
	}
}

winform.editGradient.setCueBannerText("负数为径向渐变");

import win.image;
var hico = win.image.loadIconFromFile("/.img/designPlus.ico");
winform.setIcon( hico )

winform.show();
win.setTopmost(winform.hwnd);
winform.plusPreview.redrawTransparent();

win.loopMessage();